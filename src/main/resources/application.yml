---
info:
  scm-url: "@scm.url@"
  build-url: "http://travis-ci.org/@env.TRAVIS_REPO_SLUG@/builds/@env.TRAVIS_BUILD_ID@"
  stage: prod
spring:
  application:
    name: "@pom.artifactId@"
  session:
    store-type: none
    disable-redis-config-action: false

##
# Embedded CAS Tomcat Container
#
server:
  context-path: /cas-management
  tomcat:
    remote_ip_header: x-forwarded-for
    port-header: 'X-Forwarded-Port'
    protocol_header: x-forwarded-proto
    protocol-header-https-value: https
    # Add IPv6 localhost to default list
    internal-proxies: 10\.\d{1,3}\.\d{1,3}\.\d{1,3}|192\.168\.\d{1,3}\.\d{1,3}|169\.254\.\d{1,3}\.\d{1,3}|127\.\d{1,3}\.\d{1,3}\.\d{1,3}|172\.1[6-9]{1}\.\d{1,3}\.\d{1,3}|172\.2[0-9]{1}\.\d{1,3}\.\d{1,3}|172\.3[0-1]{1}\.\d{1,3}\.\d{1,3}|0:0:0:0:0:0:0:1|::1

cas:
  authn:
    accept:
      users: ''
    attributeRepository:
#      expirationTime: 30
#      expirationUnits: MINUTES
#      maximumCacheSize: 10000
      merger: MERGE
# Attributes that you wish to resolve for the principal
      defaultAttributesToRelease: id,userid,givenName,sn,firstname,lastname,email,affiliation,organisation,city,state,country,role,authority,telephone,primaryUserType,secondaryUserType,legacyPassword
      stubAttributes: []
      jdbc:
        - driverClass: com.mysql.jdbc.Driver
          requireAllAttributes: false
          # caseCanonicalization=NONE|LOWER|UPPER
          caseCanonicalization: NONE
          queryType: AND
          singleRow: false
          # TODO determine whether calling a stored proc is officially supported by the Apereo JDBC PersonDir
          sql: call sp_get_user_attributes(?);
          # username is not used because we don't use {0} in sql: above
          username: username
          # Used only when there is a mapping of many rows to one user
          columnMappings:
            key: value
          attributes:
            userid: userid
            id: id
            givenName: givenName
            firstname: firstname
            sn: sn
            lastname: lastname
            email: email
            authority: authority
            role: role
            affiliation: affiliation
            organisation: organisation
            city: city
            state: state
            country: country
            telephone: telephone
            primaryUserType: primaryUserType
            secondaryUserType: secondaryUserType
    oauth:
      accessToken:
        maxTimeToLiveInSeconds: "PT28800S"
        timeToKillInSeconds: "PT7200S"
      refreshToken:
        timeToKillInSeconds: "P14D"
    oidc:
      scopes:
        - openid
        - profile
        - email
        #- address
        #- phone
        - offline_access
        - ala
        - role
      claims: # This list is all the specified oidc claims plus ALA specific
        - sub
        - name
        - preferred_username
        - family_name
        - given_name
        - middle_name
        - given_name
        - profile
        - picture
        - nickname
        - website
        - zoneinfo
        - locale
        - updated_at
        - birthdate
        - email
        - email_verified
        - phone_number
        - phone_number_verified
        - address
        - organisation
        - role
        - authority
        - city
        - state
        - country
        - primary_user_type
        - secondary_user_type
      userDefinedScopes:
        ala: organisation, city, state, country, primary_user_type, secondary_user_type
        role: role, authority
      claimsMap:
        sub: userid
        name: displayName
        given_name: givenName
        family_name: familyName
        email: email
        # ALA attributes
        primary_user_type: primaryUserType
        secondary_user_type: secondaryUserType
  serviceRegistry:
#    watcherEnabled: true
#    repeatInterval: 120000
#    startDelay: 15000
    initFromJson: false
#    json:
#      location: classpath:/services
    mongo:
      collection: services
      databaseName: cas-service-registry
      userId: cas
      password: password
    jpa:
      driverClass: com.mysql.jdbc.Driver
      dialect: org.hibernate.dialect.MySQL57Dialect
      ddlAuto: validate
#      healthQuery:
#      url: jdbc:mysql://localhost/services
#      user: sa
#      password:
#      isolateInternalQueries: false
#      failFast: true
#      leakThreshold: 10
#      batchSize: 1
#      autocommit: false
#      idleTimeout: 5000
#      dataSourceName:
#      dataSourceProxy: false

#  jdbc:
#    showSql: false
#    genDdl: false
#  httpWebRequest:
#    cors:
#      enabled: true
#      allowCredentials: true
#      allowOrigins:
#        - "*"

# Override these for non-ALA deployments
ala:
  skin:
    baseUrl: https://www.ala.org.au/
    headerFooterUrl: ${ala.skin.baseUrl}commonui-bs3/
    favIconBaseUrl: ${ala.skin.baseUrl}wp-content/themes/ala-wordpress-theme/img/favicon/
    bieBaseUrl: https://bie.ala.org.au/
    bieSearchPath: search
    userDetailsUrl: https://auth.ala.org.au/userdetails/
    orgShortName: ALA
    orgLongName: Atlas Of Living Australia
    orgNameKey: ala
    cacheDuration: 1800000 # P30m
debug: false